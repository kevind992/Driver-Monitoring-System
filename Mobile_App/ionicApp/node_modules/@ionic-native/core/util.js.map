{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../src/@ionic-native/core/util.ts"],"names":[],"mappings":";;;AAKA,MAAM,CAAC,IAAM,GAAG,GAAG,UAAC,OAAyB,EAAE,IAAY;IACzD,IAAM,KAAK,GAAa,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACxC,IAAI,GAAG,GAAQ,OAAO,CAAC;IACvB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QAC9C,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;SAAE;QAC1B,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KACrB;IACD,MAAM,CAAC,GAAG,CAAC;CACZ,CAAC;;;;AAMF,MAAM,CAAC,IAAM,UAAU,GAAG,UAAC,QAAkB;IAE3C,IAAM,gBAAgB,GAAG;QACvB,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;gBACjC,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;aAC3B,CAAC,CAAC;SACJ;QAAC,IAAI,CAAC,CAAC;YACN,OAAO,CAAC,KAAK,CAAC,0LAA0L,CAAC,CAAC;SAC3M;KACF,CAAC;IAEF,MAAM,CAAC,gBAAgB,EAAE,CAAC;CAC3B,CAAC;;;;;;AAOF,MAAM,CAAC,IAAM,SAAS,GAAG,UAAC,SAAiB;IACzC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;CAC/B,CAAC;;;;AAKF,MAAM,CAAC,IAAM,UAAU,GAAG,UAAC,UAAkB,EAAE,MAAe,EAAE,MAAe;IAC7E,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACX,OAAO,CAAC,IAAI,CAAC,wBAAwB,GAAG,UAAU,GAAG,GAAG,GAAG,MAAM,GAAG,YAAY,GAAG,UAAU,GAAG,2BAA2B,CAAC,CAAC;KAC9H;IAAC,IAAI,CAAC,CAAC;QACN,OAAO,CAAC,IAAI,CAAC,8BAA8B,GAAG,UAAU,GAAG,kCAAkC,CAAC,CAAC;KAChG;IACD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACX,OAAO,CAAC,IAAI,CAAC,cAAc,GAAG,UAAU,GAAG,sCAAsC,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC;KACpG;CACF,CAAC;;;;;;AAOF,MAAM,CAAC,IAAM,WAAW,GAAG,UAAC,UAAkB,EAAE,MAAe;IAC7D,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACX,OAAO,CAAC,IAAI,CAAC,wBAAwB,GAAG,UAAU,GAAG,GAAG,GAAG,MAAM,GAAG,8FAA8F,CAAC,CAAC;KACrK;IAAC,IAAI,CAAC,CAAC;QACN,OAAO,CAAC,IAAI,CAAC,8BAA8B,GAAG,UAAU,GAAG,oGAAoG,CAAC,CAAC;KAClK;CACF,CAAC","sourcesContent":["declare const window: any;\r\n\r\n/**\r\n * @private\r\n */\r\nexport const get = (element: Element | Window, path: string): any => {\r\n  const paths: string[] = path.split('.');\r\n  let obj: any = element;\r\n  for (let i: number = 0; i < paths.length; i++) {\r\n    if (!obj) { return null; }\r\n    obj = obj[paths[i]];\r\n  }\r\n  return obj;\r\n};\r\n\r\n\r\n/**\r\n * @private\r\n */\r\nexport const getPromise = (callback: Function): Promise<any> => {\r\n\r\n  const tryNativePromise = () => {\r\n    if (window.Promise) {\r\n      return new Promise((resolve, reject) => {\r\n        callback(resolve, reject);\r\n      });\r\n    } else {\r\n      console.error('No Promise support or polyfill found. To enable Ionic Native support, please add the es6-promise polyfill before this script, or run with a library like Angular or on a recent browser.');\r\n    }\r\n  };\r\n\r\n  return tryNativePromise();\r\n};\r\n\r\n/**\r\n * @private\r\n * @param pluginRef\r\n * @returns {null|*}\r\n */\r\nexport const getPlugin = (pluginRef: string): any => {\r\n  return get(window, pluginRef);\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nexport const pluginWarn = (pluginName: string, plugin?: string, method?: string): void => {\r\n  if (method) {\r\n    console.warn('Native: tried calling ' + pluginName + '.' + method + ', but the ' + pluginName + ' plugin is not installed.');\r\n  } else {\r\n    console.warn('Native: tried accessing the ' + pluginName + ' plugin but it\\'s not installed.');\r\n  }\r\n  if (plugin) {\r\n    console.warn('Install the ' + pluginName + ' plugin: \\'ionic cordova plugin add ' + plugin + '\\'');\r\n  }\r\n};\r\n\r\n/**\r\n * @private\r\n * @param pluginName\r\n * @param method\r\n */\r\nexport const cordovaWarn = (pluginName: string, method?: string): void => {\r\n  if (method) {\r\n    console.warn('Native: tried calling ' + pluginName + '.' + method + ', but Cordova is not available. Make sure to include cordova.js or run in a device/simulator');\r\n  } else {\r\n    console.warn('Native: tried accessing the ' + pluginName + ' plugin but Cordova is not available. Make sure to include cordova.js or run in a device/simulator');\r\n  }\r\n};\r\n"]}