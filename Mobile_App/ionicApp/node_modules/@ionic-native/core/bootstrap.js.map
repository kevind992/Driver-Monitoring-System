{"version":3,"file":"bootstrap.js","sourceRoot":"","sources":["../../../src/@ionic-native/core/bootstrap.ts"],"names":[],"mappings":"AAAA,MAAM;IACJ,IAAM,oBAAoB,GAAG,IAAI,CAAC;;;;;IAMlC,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAE1B,IAAI,YAAY,GAAG,KAAK,CAAC;IACzB,QAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE;QACvC,OAAO,CAAC,GAAG,CAAC,iDAA+C,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,QAAK,CAAC,CAAC;QACvF,YAAY,GAAG,IAAI,CAAC;KACrB,CAAC,CAAC;IAEH,UAAU,CAAC;QACT,EAAE,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACtC,OAAO,CAAC,IAAI,CAAC,mDAAiD,oBAAoB,6HAA0H,CAAC,CAAC;SAC/M;KACF,EAAE,oBAAoB,CAAC,CAAC;CAC1B","sourcesContent":["export function checkReady() {\r\n  const DEVICE_READY_TIMEOUT = 5000;\r\n\r\n  // To help developers using cordova, we listen for the device ready event and\r\n  // log an error if it didn't fire in a reasonable amount of time. Generally,\r\n  // when this happens, developers should remove and reinstall plugins, since\r\n  // an inconsistent plugin is often the culprit.\r\n  const before = Date.now();\r\n\r\n  let didFireReady = false;\r\n  document.addEventListener('deviceready', () => {\r\n    console.log(`Ionic Native: deviceready event fired after ${(Date.now() - before)} ms`);\r\n    didFireReady = true;\r\n  });\r\n\r\n  setTimeout(() => {\r\n    if (!didFireReady && !!window.cordova) {\r\n      console.warn(`Ionic Native: deviceready did not fire within ${DEVICE_READY_TIMEOUT}ms. This can happen when plugins are in an inconsistent state. Try removing plugins from plugins/ and reinstalling them.`);\r\n    }\r\n  }, DEVICE_READY_TIMEOUT);\r\n}\r\n"]}