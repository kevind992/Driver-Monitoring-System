{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/pages/list/list.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/list/list.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 111;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 111\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 153;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 153\n// module chunks = 0","\nimport { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  constructor(public navCtrl: NavController, public http:Http) {\n\n  }\n\n  // items:any;\n  item;\n\n  //Hi thereS\n\n  loadLogs() {\n    this.http.get('http://178.62.100.184/api/data').map(data => data.json()).subscribe(data => {\n      this.item = data;\n      console.log(this.item)\n    },\n  (err) => {\n    alert('oops' + err);\n  });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Component({\n  selector: 'page-list',\n  templateUrl: 'list.html'\n})\nexport class ListPage {\n  selectedItem: any;\n  icons: string[];\n  // items: Array<{title: string, note: string, icon: string}>;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public http:Http) {\n    // If we navigated to this page, we will have an item available as a nav param\n    // this.selectedItem = navParams.get('item');\n\n    // Let's populate this page with some filler content for funzies\n    // this.icons = ['flask', 'wifi', 'beer', 'football', 'basketball', 'paper-plane',\n    // 'american-football', 'boat', 'bluetooth', 'build'];\n\n\n    // this.items = [];\n\n    // for (let i = 1; i < 11; i++) {\n    //   this.items.push({\n    //     title: 'Item ' + i,\n    //     note: 'This is item #' + i,\n    //     icon: this.icons[Math.floor(Math.random() * this.icons.length)]\n      // });\n    // }\n  }\n\n  items:any;\n  item;\n\n  loadLogs() {\n    this.http.get('http://178.62.100.184/api/data').map(data => data.json()).subscribe(data => {\n      this.item = data.results;\n      console.log(this.items)\n    },\n  (err) => {\n    alert('oops' + err);\n  });\n  }\n\n  itemTapped(event, item) {\n    // That's right, we're pushing to ourselves!\n    this.navCtrl.push(ListPage, {\n      item: item\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list/list.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\n\nimport {HttpModule} from '@angular/http';\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { ListPage } from '../pages/list/list';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { ListProvider } from '../providers/list/list';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    ListPage\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(MyApp),\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    ListPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    ListProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { Nav, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\nimport { ListPage } from '../pages/list/list';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n\n  rootPage: any = HomePage;\n\n  pages: Array<{title: string, component: any}>;\n\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen) {\n    this.initializeApp();\n\n    // used for an example of ngFor and navigation\n    this.pages = [\n      { title: 'Home', component: HomePage },\n      { title: 'List', component: ListPage }\n    ];\n\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","// import { HttpClient } from '@angular/common/http';\n\nimport { Injectable } from '@angular/core';\n// import { Http, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n/*\n  Generated class for the ListProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class ListProvider {\n\n  data: any;\n \n  // constructor(public http: Http) {\n    // this.data = null;\n  // }\n\n  getList() {\n    if (this.data) {\n      return Promise.resolve(this.data);\n    }\n\n    return new Promise(resolve => {\n \n      // this.http.get('http://178.62.100.184:27017/')\n      //   .map(res => res.json())\n      //   .subscribe(data => {\n      //     this.data = data;\n      //     resolve(this.data);\n        // });\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/list/list.ts"],"sourceRoot":""}